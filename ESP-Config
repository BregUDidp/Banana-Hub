-- ‡πÇ‡∏´‡∏•‡∏î Kavo UI Library
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()

local Window = Library.CreateLib("‚ùÑÔ∏è SnowX AimBot", "Sentinel")

-- Tabs & Section
local MainTab = Window:NewTab("‚ùÑÔ∏è ‡∏Å‡∏≤‡∏£‡∏°‡∏≠‡∏á‡∏Ñ‡∏ô/‡∏Å‡∏≤‡∏£‡∏ó‡∏∞‡∏•‡∏∏‡∏¢‡∏¥‡∏á")
local MainSection = MainTab:NewSection("‚ùÑÔ∏è ESP SnowX")

-- Services
local plrs = game:GetService("Players")
local plr = plrs.LocalPlayer
local cam = workspace.CurrentCamera
local input = game:GetService("UserInputService")
local run = game:GetService("RunService")

-- States
local aimbotOn, fovOn, tracerOn, espOn = false, false, false, false
local target = nil
local holding = false

-- Rainbow
local function rainbowColor(speed)
    local t = tick() * (speed or 1)
    return Color3.fromHSV((t % 5) / 5, 1, 1)
end

-- FOV Circle
local fovCircle = Drawing.new("Circle")
fovCircle.Radius = 100
fovCircle.Thickness = 2
fovCircle.Filled = false
fovCircle.Visible = false

-- Drawing storage
local drawings = {}

local function createDrawingSet()
    local set = {}
    set.box = Drawing.new("Square")
    set.box.Thickness = 2
    set.box.Filled = false
    set.box.Visible = false

    set.tracer = Drawing.new("Line")
    set.tracer.Thickness = 2
    set.tracer.Visible = false

    set.hpText = Drawing.new("Text")
    set.hpText.Size = 16
    set.hpText.Center = true
    set.hpText.Outline = true
    set.hpText.Visible = false

    set.hpBack = Drawing.new("Square")
    set.hpBack.Filled = true
    set.hpBack.Visible = false

    set.hpBar = Drawing.new("Square")
    set.hpBar.Filled = true
    set.hpBar.Visible = false

    return set
end

local function GetClosest()
    local closest = nil
    local dist = math.huge
    local mousePos = input:GetMouseLocation()
    for _, v in pairs(plrs:GetPlayers()) do
        if v ~= plr and v.Character and v.Character:FindFirstChild("Head") and v.Character:FindFirstChild("Humanoid") then
            local hum = v.Character:FindFirstChild("Humanoid")
            if hum.Health > 0 then
                local pos, vis = cam:WorldToViewportPoint(v.Character.Head.Position)
                if vis then
                    local mag = (Vector2.new(pos.X, pos.Y) - mousePos).Magnitude
                    if mag < dist then
                        dist = mag
                        closest = v
                    end
                end
            end
        end
    end
    return closest
end

-- Input events
input.InputBegan:Connect(function(inp)
    if inp.UserInputType == Enum.UserInputType.MouseButton2 then
        holding = true
        target = GetClosest()
    end
end)
input.InputEnded:Connect(function(inp)
    if inp.UserInputType == Enum.UserInputType.MouseButton2 then
        holding = false
        target = nil
    end
end)

plrs.PlayerRemoving:Connect(function(player)
    if drawings[player] then
        for _, d in pairs(drawings[player]) do
            if d and d.Remove then
                d:Remove()
            end
        end
        drawings[player] = nil
    end
end)

run.RenderStepped:Connect(function()
    -- FOV
    if fovOn then
        fovCircle.Position = input:GetMouseLocation()
        fovCircle.Color = rainbowColor(2)
        fovCircle.Visible = true
    else
        fovCircle.Visible = false
    end

    -- ESP loop
    for _, v in pairs(plrs:GetPlayers()) do
        if v ~= plr then
            local alive = v.Character and v.Character:FindFirstChild("Head") and v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health > 0
            local headPos, vis = nil, false
            if alive then
                headPos, vis = cam:WorldToViewportPoint(v.Character.Head.Position)
            end

            if not drawings[v] then
                drawings[v] = createDrawingSet()
            end
            local set = drawings[v]
            local col = rainbowColor(2)

            -- Box
            if espOn and alive and vis then
                set.box.Size = Vector2.new(30, 30)
                set.box.Position = Vector2.new(headPos.X - 15, headPos.Y - 15)
                set.box.Color = col
                set.box.Visible = true
            else
                set.box.Visible = false
            end

            -- Tracer
            if tracerOn and alive and vis then
                set.tracer.From = Vector2.new(cam.ViewportSize.X/2, cam.ViewportSize.Y)
                set.tracer.To = Vector2.new(headPos.X, headPos.Y)
                set.tracer.Color = col
                set.tracer.Visible = true
            else
                set.tracer.Visible = false
            end

            -- Health
            if espOn and alive and vis then
                local hum = v.Character:FindFirstChild("Humanoid")
                local health = math.max(0, hum.Health)
                local maxHealth = hum.MaxHealth or 100
                local pct = math.clamp(health / maxHealth, 0, 1)

                set.hpText.Text = string.format("%d / %d", math.floor(health), math.floor(maxHealth))
                set.hpText.Position = Vector2.new(headPos.X, headPos.Y - 28)
                set.hpText.Color = Color3.new(1,1,1)
                set.hpText.Visible = true

                local barWidth = 40
                local barHeight = 6
                local barPosX = headPos.X - barWidth/2
                local barPosY = headPos.Y + 18

                set.hpBack.Size = Vector2.new(barWidth, barHeight)
                set.hpBack.Position = Vector2.new(barPosX, barPosY)
                set.hpBack.Color = Color3.fromRGB(30,30,30)
                set.hpBack.Visible = true

                set.hpBar.Size = Vector2.new(barWidth * pct, barHeight)
                set.hpBar.Position = Vector2.new(barPosX, barPosY)
                set.hpBar.Color = Color3.fromHSV(pct * 0.33, 1, 1)
                set.hpBar.Visible = true
            else
                set.hpText.Visible = false
                set.hpBack.Visible = false
                set.hpBar.Visible = false
            end
        end
    end

    -- Aimbot
    if aimbotOn and holding and target and target.Character and target.Character:FindFirstChild("Head") then
        cam.CFrame = CFrame.new(cam.CFrame.Position, target.Character.Head.Position)
    end
end)

-- GUI toggles
MainSection:NewToggle("üåÄ ‡πÄ‡∏õ‡∏¥‡∏î AimBot/‡∏õ‡∏¥‡∏î AimBot", false, function(state)
    aimbotOn = state
    print("Aimbot state:", state)
end)
MainSection:NewToggle("üåÄ ‡πÇ‡∏ä‡∏ß‡πå‡∏ß‡∏á‡∏Å‡∏•‡∏°‡∏£‡∏≠‡∏ö‡∏ï‡∏±‡∏ß", "Show circle around mouse", false, function(state)
    fovOn = state
    fovCircle.Visible = state
    print("FOV state:", state)
end)
MainSection:NewToggle("üåÄ ‡∏Å‡∏≤‡∏£‡∏°‡∏≠‡∏á‡∏Ñ‡∏ô", "Show boxes and health", false, function(state)
    espOn = state
    if not state then
        for _, set in pairs(drawings) do
            for _, d in pairs(set) do
                if d then d.Visible = false end
            end
        end
    end
    print("ESP state:", state)
end)
MainSection:NewToggle("üåÄ ‡∏Å‡∏≤‡∏£‡∏°‡∏≠‡∏á‡∏Ñ‡∏ô‡πÅ‡∏ö‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏™‡πâ‡∏ô", "Line to enemies", false, function(state)
    tracerOn = state
    print("Tracer state:", state)
end)
